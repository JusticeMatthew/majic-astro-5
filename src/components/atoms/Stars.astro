<script>
  document.addEventListener("astro:page-load", () => {
    const totalStars = 100;
    const fadingContainer = document.getElementById("fading-stars-container")!;
    const normalContainer = document.getElementById("normal-stars-container")!;

    function randomNumberFromRange(min: number, max: number) {
      return Math.random() * (max - min) + min;
    }

    function setStarOpacity(pos: number) {
      return pos <= 35 ? pos / 200 : 1;
    }

    function createStar(isFading: boolean) {
      const star = document.createElement("figure");
      star.id = "star";

      star.style.top = `${randomNumberFromRange(0, 100)}%`;
      star.style.left = `${randomNumberFromRange(0, 100)}%`;
      star.style.animationDuration = `${randomNumberFromRange(2, 5)}s`;
      star.style.animationDelay = `${randomNumberFromRange(0, 5)}s`;

      if (isFading) {
        const pos = parseInt(star.style.top.split(".")[0]);
        star.style.setProperty("--dynamic-opacity", `${setStarOpacity(pos)}`);
      }

      return star;
    }

    function populateStars(container: HTMLElement, isFading: boolean) {
      for (let i = 0; i < totalStars; i++) {
        container.appendChild(createStar(isFading));
      }
    }

    if (fadingContainer) {
      populateStars(fadingContainer, true);
    }

    if (normalContainer) {
      populateStars(normalContainer, false);
    }
  });
</script>

<div class="relative">
  {/* Transition gradient */}
  <div
    class="from-dark-purple via-dark-purple/90 pointer-events-none absolute inset-x-0 -top-72 z-10 h-72 bg-gradient-to-t to-transparent">
  </div>

  <div id="fading-stars-container">
    <figure
      class="from-dark-purple via-dark-bg to-dark-bg absolute inset-0 h-full w-screen bg-gradient-to-b via-80%">
    </figure>
    <slot name="examples" />
  </div>
  <div id="normal-stars-container" class="!bg-dark-bg">
    <slot name="contact" />
    <slot name="footer" />
  </div>
</div>

<style is:global>
  #fading-stars-container,
  #normal-stars-container {
    position: relative !important;
    width: 100%;
    height: fit-content !important;
    overflow: hidden;
    z-index: 20; /* Increased to ensure content stays above transition */
  }

  #star {
    position: absolute !important;
    width: 2px;
    height: 2px;
    background-color: #fff;
    border-radius: 50%;
    opacity: var(--dynamic-opacity);
    animation: twinkle 1s infinite;
  }

  @keyframes twinkle {
    0%,
    100% {
      opacity: var(--dynamic-opacity);
    }
    50% {
      opacity: 0.3;
    }
  }
</style>
